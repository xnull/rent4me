<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <security:debug/>

    <security:global-method-security authentication-manager-ref="authenticationManager"/>

    <bean id="tokenAuthenticationFilter" class="bynull.realty.web.filters.TokenAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationEntryPoint">
            <bean class="bynull.realty.web.filters.TokenAuthenticationEntryPoint"/>
        </property>
    </bean>

    <security:http pattern="/rest/**" use-expressions="true" authentication-manager-ref="authenticationManager">
        <!--<security:intercept-url pattern="/rest/test/test3" access="hasRole('ROLE_USER')" requires-channel="any"/>-->
        <security:intercept-url pattern="/rest/auth" method="DELETE" access="hasRole('ROLE_USER')"
                                requires-channel="any"/>
        <!--<security:intercept-url pattern="/ws/messages/**" access="isAnonymous()" requires-channel="any"/>-->
        <security:intercept-url pattern="/rest/auth/**" access="isAnonymous()" requires-channel="any"/>
        <security:intercept-url pattern="/rest/pre_render/**" access="true" requires-channel="any"/>
        <security:intercept-url pattern="/rest/users" method="POST" access="isAnonymous()" requires-channel="any"/>
        <security:intercept-url pattern="/rest/apartments/search" method="GET" access="isAnonymous() || hasRole('ROLE_USER')" requires-channel="any"/>
        <security:intercept-url pattern="/rest/apartments/{id}" method="GET" access="isAnonymous() || hasRole('ROLE_USER')" requires-channel="any"/>
        <security:intercept-url pattern="/rest/metros/search" method="GET" access="isAnonymous() || hasRole('ROLE_USER')" requires-channel="any"/>
        <security:intercept-url pattern="/rest/cities/search" method="GET" access="isAnonymous() || hasRole('ROLE_USER')" requires-channel="any"/>
        <security:intercept-url pattern="/rest/feedback" method="POST" access="isAnonymous() || hasRole('ROLE_USER')" requires-channel="any"/>
        <security:intercept-url pattern="/rest/**" access="hasRole('ROLE_USER')" requires-channel="any"/>
        <!--<security:intercept-url pattern="/login" access="isAnonymous()" requires-channel="any"/>-->
        <security:http-basic/>
        <!--<security:custom-filter ref="tokenAuthenticationFilter" before="BASIC_AUTH_FILTER"/>-->
        <!--<security:form-login-->
        <!--login-page="/login"-->
        <!--authentication-failure-url="/login"-->
        <!--default-target-url="/"-->
        <!--username-parameter="username"-->
        <!--password-parameter="password"-->
        <!--/>-->

        <!--<security:logout logout-url="/logout" logout-success-url="/" />-->
        <!--<security:session-management>-->
        <!--<security:concurrency-control max-sessions="1"/>-->
        <!--</security:session-management>-->
    </security:http>

    <security:http pattern="/**" security="none" authentication-manager-ref="authenticationManager"/>


    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider ref="tokenBasedAuthenticationProvider">
            <!--<security:password-encoder ref="md5PasswordEncoder"/>-->
            <!--<security:user-service >-->
            <!--<security:user name="dionis" authorities="ROLE_ADMIN" password="123"/>-->
            <!--</security:user-service>-->
        </security:authentication-provider>
        <!--<security:authentication-provider user-service-ref="userDetailsServiceImpl2">-->
        <!--<security:password-encoder ref="md5PasswordEncoder"/>-->
        <!--</security:authentication-provider>-->
    </security:authentication-manager>

</beans>