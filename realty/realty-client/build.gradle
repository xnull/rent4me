/**
 * Client part of realty application: html and javascript.
 * Decided that source files will be moved from realty-web/src/main/webapp/view
 */

/**
 * https://github.com/srs/gradle-node-plugin
 *
 * tasks: nodeSetup, npmInstall, jsTest
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:0.4'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'node'

node {
    // Version of node to use.
    version = '0.11.10'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'http://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")
}

/**
 * Download js dependencies
 */
task bowerInstall(dependsOn: npmInstall, type: NodeTask) {
    group = 'javascript'
    script = new File(project.projectDir, '/node_modules/bower/bin/bower')
    args = ['install']
    execOverrides {
        it.ignoreExitValue = false
        it.workingDir = project.projectDir
    }
}

/**
 * Run unit tests
 */
task jsTest(type: JsTaskRunner) {
    script = new File(project.projectDir, '/node_modules/karma/bin/karma')
    args = ['start', 'test/karma.conf.js']
}
test.dependsOn jsTest

task jsE2ETest(type: JsTaskRunner) {
    script = new File(project.projectDir, '/node_modules/protractor/bin/protractor')
    args = ['test/protractor-conf.js']
}

task jsHint(type: JsTaskRunner) {
    script = new File(project.projectDir, '/node_modules/gulp/bin/gulp')
    args = ['lint']
}
check.dependsOn jsHint

task packApp(dependsOn: bowerInstall, type: Tar) {
    group = 'Packaging'
    from 'app'
    baseName = 'app'
}

clean << {
    project.delete './node_modules'
    project.delete './app/vendor'
}

public class JsTaskRunner extends com.moowork.gradle.node.task.NodeTask {

    JsTaskRunner() {
        group = 'javascript'
        dependsOn 'bowerInstall'
        setExecOverrides {
            it.ignoreExitValue = false
            it.workingDir = project.projectDir
        }
    }
}